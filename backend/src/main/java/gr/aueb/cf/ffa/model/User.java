package gr.aueb.cf.ffa.model;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.Pattern;
import lombok.*;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

/**
 * Represents a user entity in the system.
 * Stored in the "users" collection in MongoDB.
 */
@Getter
@Setter
@Data
@NoArgsConstructor
@AllArgsConstructor
@Document(collection = "users") // Specifies the MongoDB collection
@Schema(description = "Model representing a user entity in the system.")
public class User {

    @Id
    @Schema(
            description = "Unique identifier for the user (automatically generated by MongoDB).",
            example = "64a3f2a5c4e1a4c356789012",
            accessMode = Schema.AccessMode.READ_ONLY
    )
    private String id;

    @Pattern(
            regexp = "^[a-zA-Z0-9_]{5,20}$",
            message = "Username must be 5-20 characters, alphanumeric, and can include underscores."
    )
    @Schema(
            description = "Username of the user. Must be 5-20 characters, alphanumeric, and can include underscores.",
            example = "john_doe123"
    )
    private String username;

    @Pattern(
            regexp = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$",
            message = "Password must be at least 8 characters, include 1 uppercase, 1 lowercase, 1 number, and 1 special character."
    )
    @Schema(
            description = "Password of the user. Must be at least 8 characters long and include an uppercase letter, a lowercase letter, a number, and a special character.",
            example = "StrongP@ssw0rd!"

    )
    private String password;

    @Pattern(
            regexp = "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$",
            message = "Invalid email format."
    )
    @Schema(
            description = "Email address of the user. Must follow standard email formatting rules.",
            example = "user@example.com"
    )
    private String email;

    @Schema(
            description = "Role assigned to the user in the system (e.g., 'USER', 'ADMIN').",
            example = "USER",
            accessMode = Schema.AccessMode.READ_ONLY
    )
    private String role;
}
